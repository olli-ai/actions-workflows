name: Reusable Build and Package

on:
  workflow_call:
    inputs:
      appName:
        required: true
        type: string
      helmRepo:
        required: true
        type: string
      runner:
        required: true
        type: string        
    secrets:
      dockerSecret:
        required: true
      dockerUsername:
        required: true
      dockerRegistry:
        required: true
    outputs:
      chartName:
        description: Chart name
        value: ${{jobs.build.outputs.chartName}}
      chartVersion:
        description: Chart Version
        value: ${{jobs.build.outputs.chartVersion}}
      chartChanged:
        description: true if chart content has changed, false otherwise
        value: ${{jobs.build.outputs.chartChanged}}
      imageTag:
        description: Docker image tag
        value: ${{jobs.build.outputs.imageTag}}
      dockerImage:
        description: Docker image
        value: ${{jobs.build.outputs.dockerImage}}
      buildEnvironment:
        description: Build Environment
        value: ${{jobs.build.outputs.buildEnvironment}}

jobs:
  build:
    name: Build & Package
    runs-on: ${{inputs.runner}}
    permissions:
      contents: read
      packages: write

    env:
      REGISTRY: ${{ secrets.dockerRegistry }}
      APP_NAME: ${{ inputs.appName }}
      HELM_REPO: ${{ inputs.helmRepo }}
      DOCKER_SECRET: ${{ secrets.dockerSecret }}
      DOCKER_USERNAME: ${{ secrets.dockerUsername }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Generate Tag Version
        id: appVersion
        uses: paulhatch/semantic-version@v4.0.2
        with:
          bump_each_commit: true

      - name: Chart version
        id: chartVersion
        uses: paulhatch/semantic-version@v4.0.2
        with:
          bump_each_commit: true
          change_path: "charts/${{ env.APP_NAME }}"
          major_pattern: (CHART-MAJOR)
          minor_pattern: "(CHART-MINOR)"

      - name: Set Environment
        run: |
          env
          export BRANCH=$([[ $GITHUB_EVENT_NAME = pull_request ]] && echo pr-${{github.event.number}} || echo ${GITHUB_REF##*/})
          echo "BUILD_NAME=$([[ $BRANCH = master ]] && echo production || echo $BRANCH)" >> $GITHUB_ENV
          export BUILD_NAME=$([[ $BRANCH = master ]] && echo production || echo $BRANCH)
          echo "BUILD_ENVIRONMENT=$([[ $BUILD_NAME =~ pr-[0-9]+ ]] && echo dev || echo $BUILD_NAME)"

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_SECRET }}

      - name: Build & Tag & Push Docker image
        env:
          TAG: ${{steps.appVersion.outputs.version}}-${{env.BUILD_NAME}}
          BUILD_NAME: ${{ env.BUILD_NAME }}
        run: |
          docker build -t ${{env.APP_NAME}}:${{env.TAG}} .
          docker tag ${{env.APP_NAME}}:${{env.TAG}} ${{env.REGISTRY}}/docker/${{env.APP_NAME}}:${{env.TAG}}
          docker push ${{env.REGISTRY}}/docker/${{env.APP_NAME}}:${{env.TAG}}

      - name: Package & Push Helm Chart
        if: steps.chartVersion.outputs.changed == 'true'
        uses: koslib/helm-eks-action@master
        env:
          CHART_VERSION: ${{steps.chartVersion.outputs.version}}-${{env.BUILD_NAME}}
        with:
          command: |
            helm lint ./charts/${{env.APP_NAME}} -f ./charts/${{env.APP_NAME}}/values.yaml
            helm package ./charts/${{env.APP_NAME}} --version ${{env.CHART_VERSION}}
            helm plugin install https://github.com/chartmuseum/helm-push || true
            helm repo add ${{ env.HELM_REPO }} https://${{env.REGISTRY}}/chartrepo/helm-chart --username ${{ env.DOCKER_USERNAME }} --password ${{ env.DOCKER_SECRET }}
            helm cm-push ${{ env.APP_NAME }}-${{ env.CHART_VERSION }}.tgz ${{env.HELM_REPO}}
    outputs:
      chartName: ${{env.APP_NAME}}
      chartVersion: ${{steps.chartVersion.outputs.version}}-${{env.BUILD_NAME}}
      chartChanged: ${{steps.chartVersion.outputs.changed}}
      imageTag: ${{steps.appVersion.outputs.version}}-${{env.BUILD_NAME}}
      dockerImage: docker/${{env.APP_NAME}}
      buildEnvironment: ${{env.BUILD_ENVIRONMENT}}
